$MOVLL	SPACE	4,10
**	$MOVLL - MOVE DATA
*
*	$MOVLL MOVES A BLOCK OF BYTES TO A NEW MEMORY ADDRESS.
*
*	WHEN THE MOVE IS ACTUALLY DONE, THE ROUTINE $MOVL IS CALLED
*	TO DO THE WORK.  $MOVL HAS THE CAPABILITY TO MOVE
*	0 TO 65535 BYTES.
*
*	IF THE MOVE IS TO A LOWER ADDRESS, THE BYTES ARE MOVED FROM
*	FIRST TO LAST.
*
*	IF THE MOVE IS TO A HIGHER ADDRESS, THE BYTES ARE MOVED FROM
*	LAST TO FIRST.
*
*	THIS IS DONE SO THAT AN OVERLAPED MOVE WILL NOT 'RIPPLE'.
*
*	CALL	$MOVLL
*	DW	COUNT
*	DW	FROM
*	DW	TO
*
*	ENTRY	((SP)) = RET
*		(RET+0) = COUNT (WORD VALUE)
*		(RET+2) = FROM
*		(RET+4) = TO
*	EXIT	TO (RET+6)
*		(DE) = ADDRESS OF NEXT FROM BYTE
*		(HL) = ADDRESS OF NEXT *TO* BYTE
*		'C' CLEAR
*	USES	ALL

$MOVLL	POP	H		(HL) = RET
	MOV	C,M
	INX	H
	MOV	B,M		(BC) = COUNT
	INX	H
	MOV	E,M
	INX	H
	MOV	D,M		(DE) = FROM
	INX	H
	PUSH	D		((SP)) = FROM
	MOV	E,M
	INX	H
	MOV	D,M		(DE) = TO
	INX	H
	XTHL			((SP)) = RET, (HL) = FROM
	XCHG			(DE) = FROM , (HL) = TO
	JMP	$MOVL		MOVE IT
