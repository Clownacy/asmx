	SPACE	4,10
**	DSSS - DECODE SORT SUBSWITCH				/3.0a/
*
*	DSSS DECODES THE SORT SUBSWITCHES. ORDER IS IMPORTANT.
*	AFTER A SUBSWITCH IS PROCESSED IT IS MAPPED TO LOWER CASE
*	SO YOU CAN'T ASK FOR IT AGAIN THIS TIME THRU.
*
*	ENTRY:	(HL) = ADDRESS OF ':sssss'
*	EXIT:	'C' CLEAR IF OK
*		 SORTAB LOADED
*		'C' SET IF ERROR
*	USES:	ALL

DSSS	EQU	*

	XCHG			(DE) = ':sssss'
	MVI	B,SRTABL
	LXI	H,SORTAB
	CALL	$ZERO		ZERO SORT TABLE

	MVI	C,5		RESET *DSSST*
	LXI	H,DSSST
DSSSL	MOV	A,M
	ANI	11011111B	MAP TO UPPER CASE
	MOV	M,A
	INX	H
	INX	H
	DCR	C
	JNZ	DSSSL

	LDAX	D
	CPI	':'
	JNE	DEFSRT		DEFAULT SORT
	LXI	B,SORTAB

*	DECODE NEXT SUBSWITCH

DSSS1	MVI	A,' '
	STAX	D
DSSS1.	INX	D
	LDAX	D
	CPI	' '
	JE	DSSS1.		SKIP
	CPI	'R'		FIELD REVERSE
	JE	DSSSR		SET HI BIT
	CPI	'/'		NEXT SWITCH
	JE	DSSS2		DONE
	CPI	','		DELIMITER
	JE	DSSS2		DONE
	ANA	A		END OF LINE
	JZ	DSSS2		DONE

*	MUST BE A SUBSWITCH

	LXI	H,DSSST
	CALL	$TBLS
	STC
	RNZ			NOT A GOOD OPTION
	MOV	A,M		GET FIELD INDEX
	STAX	B		SAVE IT IN SORTAB
	INX	B
	DCX	H		POINT BACK TO SUBSWITCH
	MOV	A,M
	ORI	00100000B	MAP TO LOWER CASE SO CAN'T REPEAT IT
	MOV	M,A
	JMP	DSSS1		GET ANOTHER

*	FIELD REVERSE

DSSSR	DCX	B
	LDAX	B
	ORA	A
	JZ	DSSSE		CAN'T REV. NULL ENTRY
	ANI	200Q
	JNZ	DSSSE		ALREADY SAID 'R' ONCE
	LDAX	B
	ORI	200Q		SET HI BIT
	STAX	B
	INX	B
	JMP	DSSS1		GET ANOTHER

DSSSE	STC			ERROR
	RET

*	ALL DONE

DSSS2	LDA	SORTAB
	ANA	A		SEE IF ANYTHING THERE (ALSO, CLEAR CARRY)
	RNZ

DEFSRT	LXI	H,002001A	'NE'
	SHLD	SORTAB
	XRA	A		CLEAR CARRY
	RET

DSSST	DB	'N',1		FIVE LEGAL ENTRIES
	DB	'E',2
	DB	'D',3
	DB	'A',4
	DB	'C',5
	DB	0,0

*	SORTAB MUST BE PRECEEDED BY A NULL, WHICH WE FIND ABOVE.
SORTAB	DB	0,0,0,0,0,0	SIX BYTES
SRTABL	EQU	*-SORTAB
