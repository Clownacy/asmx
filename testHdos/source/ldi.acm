	SPACE	4,10
**	LDI - LOCATE DEVICE INFORMATION.
*
*	LDI FINDS A DEVICE IN THE DEVICE TABLE, ENTERS THE PROPER
*	INFO IN THE AIO TABLE, AND LOADS THE DEVICE DRIVER, IF NECESSARY.
*
*	ENTRY	AIO.DEV = DEVICE CODE
*	EXIT	'C' CLEAR IF OK
*		AIO.DDA, AIO.FLG, AIO.SPG, AIO.GRT AND AIO.DTA SETUP
*		'C' SET IF ERROR
*		 (A) = CODE
*	USES	ALL
*

LDI	CALL	LDI0
	RC
	CALL	LDI4
	RC
	JMP	LDI5
	SPACE	4,10
LDI0	LHLD	S.DFWA
	XCHG				; (DE) = FWA DEVICE LIST

LDI1	XCHG
	SHLD	AIO.DTA 		; SET DEVICE TABLE ADDRESS
	XCHG
	LDAX	D
	ANA	A
	MVI	A,EC.UND
	STC
	ERRNZ	DV.EL			; END OF LIST
	RZ				; UNKNOWN DEVICE

	LHLD	AIO.DEV
	LDAX	D
	INX	D
	CPI	DV.NU
	JE	LDI2			; DEVICE ENTRY NOT USED
	CMP	L			; COMPARE 1ST CHAR
	JNE	LDI2			; NOT THIS ONE
	LDAX	D
	CMP	H
	JE	LDI3			; GOT DEVICE

*	MISSED DEVICE. TRY NEXT ENTRY

LDI2	LXI	H,DEVELEN-1
	DAD	D
	XCHG
	JMP	LDI1			; TRY AGAIN

*	GOT DEVICE.

LDI3	DCX	D			; DE = address of device table
	LXI	H,DEV.JMP
	DAD	D
	SHLD	AIO.DDA 		; SET DEVICE DRIVER LINK ADDRESS

*	CHECK LEGALITY OF UNIT NUMBER

	XCHG				; HL = address of device table
	CALL	$INDLB
	DW	DEV.MNU
	MOV	D,A			; D  = maximum number of units
	LDA	AIO.UNI
	CMP	D			; 'C' SET IF AIO.UNI < DEV.MNU
	CMC
	MVI	A,EC.UUN		; ASSUME UNKNOWN UNIT NUMBER
	RET				; 'C' IF AIO.UNI >= DEV.MNU
	SPACE	4,10
*	Check to see if unit is mounted

LDI4	LDA	AIO.UNI
	MOV	B,A
	XRA	A
	CALL	BITS			; A  = MASK TO CHECK IF UNIT IS MOUNTED
	XCHG
	LXI	H,DEV.MUM
	DAD	D			; HL = address of mounted units
	ANA	M
	XCHG
	RNZ				; UNIT IS MOUNTED

	MVI	A,EC.UUN		; ASSUME UNKNOWN UNIT NUMBER
	STC
	RET				; UNIT WAS NOT MOUNTED
	SPACE	4,10
*	Conditionally load Device Driver

LDI5	LXI	D,DEV.RES
	DAD	D			; HL = address of DEV.RES
	MOV	A,M
	ANI	DR.IM
	XCHG
	CZ	RDL			; REQUEST DEVICE DRIVER IF NOT IN
	RC				; ERROR GETTING DRIVER

*	SET UP	AIO.FLG, AIO.GRT

	LXI	H,DEV.UNT-DEV.RES
	DAD	D
	LDA	AIO.UNI
	CALL	S.GUP			; HL = address of UNIT table

	CALL	$INDLB
	DW	UNT.SPG
	STA	AIO.SPG 		; set the number of sectors/group

	CALL	$INDLB
	DW	UNT.FLG
	STA	AIO.FLG

	CALL	$INDL
	DW	UNT.GRT
	XCHG
	SHLD	AIO.GRT

	ANA	A			; CLEAR CARRY
	RET
