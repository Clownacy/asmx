	SPACE	4,8
**	$UOW - UNPACK OCTAL WORD
*
*	ENTRY	(BC) = VALUE
*		(HL) = MEMORY ADDRESS
*	EXIT	(HL) = (HL) + 6
*	USES	A,F,H,L
*
	SPACE	3,8
**	$UOW. - UNPACK OCTAL WORD (ADD '.' BETWEEN BYTES)
*
*	ENTRY	(BC) = VALUE
*		(HL) = MEMORY ADDRESS
*	EXIT	(HL) = (HL) + 7
*	USES	A,F,H,L
*
	SPACE	3,10
**	$UOB - UNPACK OCTAL BYTE
*
*	ENTRY	(A) = VALUE
*		(HL) = MEMORY ADDRESS
*	EXIT	(HL) = (HL) + 3
*	USES	A,F,H,L

$UOW	MOV	A,B
	CALL	$UOB
	JMP	UOW1

$UOW.	MOV	A,B			; GET MSB
	CALL	$UOB
	MVI	M,'.'			; FOR SHOW
	INX	H

UOW1	MOV	A,C			; GET LSB

$UOB	ANA	A			; CLEAR CARRY
	CALL	UOD
	CALL	UOD

*	UNPACK OCTAL DIGIT

UOD	RAL				; ROTATE DIGIT INTO PLACE
	RAL
	RAL
	PUSH	PSW
	ANI	00000111B		; MASK OFF EXCESS
	ADI	'0'			; MAKE IT ASCII
	MOV	M,A			; POKE DIGIT
	INX	H			; BUMP POINTER
	POP	PSW
	RET
