	SPACE	4,10
**	$FCLO - CLOSE FILE BLOCK.
*
*	$FCLO IS CALLED TO TERMINATE PROCESSING THROUGH A FILE
*	BLOCK.
*
*	ENTRY	(HL) = FILE BLOCK ADDRESS
*	EXIT	TO $FERROR IF ERROR
*		 TO CALLER IF OK
*	USES	A,F,B,C,D,E

$FCLO	CALL	$FCLO.
	RNC				; NO ERROR
	JMP	$FERROR

$FCLO.	PUSH	H			; SAVE FILE BLOCK ADDRESS
	ERRNZ	FB.FLG-1
	INX	H			; (HL) = #FB.FLG
	MOV	A,M
	MVI	M,0			; CLEAR FLAG
	ANA	A
	JZ	$FCLO4			; FILE NOT OPEN
	ANI	FT.OW
	JZ	$FCLO3			; NO WRITING, NO FLUSHING NEEDED

*	WAS OPEN FOR WRITE. SEE IF NEED FLUSH THE LAST SECTOR

	CALL	$INDL
	DW	FB.PTR-FB.FLG
	PUSH	D			; SAVE (FB.PTR)
	CALL	$INDL			; (DE) = (FB.FWA)
	DW	FB.FWA-FB.FLG
	POP	H			; (HL) = (FB.PTR)
	MOV	A,L
	SUB	E
	MOV	C,A
	MOV	A,H
	SBB	D
	MOV	B,A			; (BC) = AMOUNT IN BLOCK
	ORA	C
	JZ	$FCLO3			; NONE TO FLUSH

*	NEED TO FLUSH BUFFER
*
*	(BC) = DATA AMOUNT
*	(DE) = FWA
*	(HL) = LWA+1

	MOV	A,C
	ANA	A
	JZ	$FCLO2			; DONT HAVE PARTIAL SECTOR

*	ZERO FILL PARTIAL SECTOR

$FCLO1	MVI	M,0
	INX	H
	INR	C
	JNZ	$FCLO1
	INR	B			; COUNT ANOTHER FULL SECTOR
$FCLO2	POP	H			; (HL) = FB FWA
	MOV	A,M			; (A) = CHANNEL NUMBER
	ERRNZ	FB.CHA
	PUSH	H
	SCALL	.WRITE			; FLUSH

*	READY TO CLOSE FILE.
*
*	'C' SET IF ERROR
*	 (A) = ERROR CODE

$FCLO3	POP	H			; (HL) = FILE BLOCK ADDRESS
	RC				; ERROR
	ERRNZ	FB.CHA
	MOV	A,M			; (A) = CHANNEL NUMBER
	PUSH	H
	SCALL	.CLOSE			; CLOSE CHANNEL
$FCLO4	POP	H			; (HL) = FILE BLOCK ADDRESS
	RET
