	SPACE	4,10
**	PGT - PREPARE GRT.
*
*	PGT PREPARES THE GROUP RESERVATION TABLE BY READING BOTH THE
*	GRT AND THE RGT INTO MEMORY.
*
*	THE GROUPS UNRESERVED VIA THE RGT ARE FLAGGED FREE (LINK TO GROUP 1)
*	
*	EACH DIRECTORY ENTRY IS THEN CHECKED, AND ITS GROUP IS
*	FOLLOWED THROUGH THE GRT. THE CHAIN IS DUPLICATED INTO THE GRT BEING
*	BUILT.
*
*	WHEN THIS PROCESS IS COMPLETE, ANY UNUSED GROUPS ARE CHAINED TO
*	THE FREE LIST.
*
*	ENTRY	NONE
*	EXIT	(HL) = SECTOR ADDRESS OF LAST DIRECTORY BLOCK CONTAINING FILES
*	USES	ALL
*	MODIFICATIONS:	B. WATZMAN 3/7/89 TO ALLOW USING EITHER SY1: OR SY0:
*

PGT	EQU	*

*	READ THE RGT INTO GRT MEMORY

	LHLD	UNTTAB
	CALL	$INDL			; DE = GRT ADDRESS
	DW	UNT.GRT
	XCHG
	SHLD	PGTG			; SAVE GRT ADDRESS
	XCHG
	PUSH	H
	LHLD	RGTADR			; HL = RGT sector address
	CALL	PGT10.			; READ RGT INTO GRT AREA
	POP	H
	RC				; ERROR

*	READ IN THE GRT

	CALL	$INDL
	DW	UNT.GTS 		; DE = GRT SECTOR
	PUSH	H
	LHLD	PGTA			; HL = WORK SPACE
	XCHG				; HL = GRT SECTOR
	CALL	PGT10.
	POP	H
	RC

*	INITIALIZE FOR BUILD TABLE LOOP

	CALL	$INDL
	DW	UNT.DIS
	LHLD	S.SCR
	CALL	$INDS			; STORE FIRST DIR. SECT.
	DW	DIS.LNK

	LHLD	PGTA
	MVI	M,0

*	READ DIRECTORY BLOCK

PGT3	LHLD	S.SCR
	CALL	$INDL
	DW	DIS.LNK
	XCHG				; HL = DIRECTORY LINK SECTOR NUMBER
*					; DE = SECTOR SCRATCH ADDRESS

	MOV	A,H
	ORA	L
	JZ	PGT7			; ALL DONE

	LXI	B,512
	XRA	A
	ERRNZ	DC.REA
	CALL	DRIVER
	RC

*	SAVE BLOCK INFO IN CONVENIENT PLACE

	LHLD	S.SCR
	CALL	$INDLB
	DW	DIS.ENL
	STA	PGTE			; SAVE DIRECTORY ENTRY LENGTH
	CALL	$INDL
	DW	DIS.SEC
	XCHG
	SHLD	PGTD			; SAVE THIS BLOCK NUMBER
	XCHG

*	SCAN DIRECTORY FOR ENTRYS. TRANSFER THE CHAIN TO THE NEW GRT.

PGT4	MOV	A,M			; (A) = 1ST CHARACTER OF NAME
	ERRNZ	DF.EMP-377Q
	INR	A
	JZ	PGT6			; SPACE IS EMPTY
	ERRNZ	DF.CLR-376Q
	INR	A
	JZ	PGT7			; ALL DONE
	JM	PGT6			; ** DEBUG ** SHOULD NOT OCCUR
	PUSH	H			; SAVE ADDRESS OF DIRECTORY ENTRY

	CALL	$INDLB
	DW	DIR.FGN
	MOV	L,A			; L  = FIRST GROUP NUMBER

*	COPY CHAIN TO GRT

PGT5	LDA	PGTA+1
	MOV	H,A

	MOV	A,M

	PUSH	PSW
	LDA	PGTG+1
	MOV	H,A			; SET UP THE HIGH ORDER BYTE OF GRT ADDR
	POP	PSW

	DCR	M			; SEE IF FREE
	MOV	M,A
	JNZ	PGTERR			; WAS NOT FREE ! DOUBLE LINKAGE & EXIT
	ANA	A
	MOV	L,A
	JNZ	PGT5			; MORE TO GO
	LHLD	PGTD
	SHLD	PGTB			; SAVE SECTOR ADDRESS OF BLOCK
	POP	H			; (HL) = DIRECTORY SECTOR POINTER

PGT6	LDA	PGTE			; DIRECTORY ENTRY LENGTH
	CALL	$DADA.			; HL = HL + DIR. LENGTH

	MOV	A,M
	ANA	A			; SEE IF ENTRY
	JNZ	PGT4			; MORE ENTRYS TO GO
	JMP	PGT3			; GET NEW SECTOR

*	ALL DONE, LINK UNUSED GUYS

PGT7	MVI	C,0			; (C) = NEXT FREE GROUP
	LHLD	PGTG
	LXI	D,255
	DAD	D			; HL = GRT ADDRESS + 255

PGT8	MVI	A,1
	CMP	M
	JNE	PGT9			; NOT FREE
	MOV	M,C			; LINK TO NEXT FREE
	MOV	C,L			; SAVE THIS ONES INDEX
PGT9	DCR	L
	JNZ	PGT8			; NOT ALL PROCESSED
	MOV	M,C			; SET FREE CHAIN

	LHLD	UNTTAB
	CALL	$INDL
	DW	UNT.GTS
	PUSH	D
	CALL	$INDL			; DE = GRT ADDRESS
	DW	UNT.GRT
	POP	H			; HL = GRT SECTOR

	LXI	B,256
	ERRNZ	DC.WRI-1
	MOV	A,B
	CALL	DRIVER			; UPDATE GRT
	LXI	H,0			; (HL) = SECTOR NUMBER OF LAST BLOCK WITH FILES
PGTB	EQU	*-2
	RET
	SPACE	3,10
**	PGTERR - LINKAGE ERROR IN DISK FILE STRUCTURE.

PGTERR	MVI	A,EC.DSC		; DISK STRUCTURE IS CORRUPT
	STC

PGTERR. POP	H
	RET
	SPACE	3,10
**	PGT10.	- GET ONE SECTOR

PGT10.	LXI	B,256
	ERRNZ	DC.REA
	XRA	A
	JMP	DRIVER
	SPACE	3,10
**	PGT11.	- GET THE SECOND SECTOR OF THE DIRECTORY BLOCK

PGT11.	PUSH	H
	CALL	PGT12.			; DE = SECTOR SCRATCH
	LHLD	PGTC
	INX	H
	CALL	PGT10.
	POP	H
	RET
	SPACE	3,10
**	PGT12.	- GET THE POINTER TO THE SECTOR SCRATCH AREA

PGT12.	XCHG
	LHLD	S.SCR
	XCHG				; DE = SECTOR SCRATCH
	RET
	SPACE	3,10
PGTA	EQU	S.LABEL 		; GRT WORK AREA POINTER ADDRESS
PGTC	DW	0			; DIRECTORY LINK SECTOR
PGTD	DW	0			; CURRENT BLOCK NUMBER
PGTE	DB	0			; DIRECTORY ENTRY LENGTH
PGTF	DB	0			; SECOND SECT. OF BLOCK ALREADY READ FLAG
*					;  != 0  =>  TRUE
PGTG	DW	0			; SAVED GRT ADDRESS
